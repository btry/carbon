{#
 # -------------------------------------------------------------------------
 # carbon plugin for GLPI
 # -------------------------------------------------------------------------
 #
 # MIT License
 #
 # Permission is hereby granted, free of charge, to any person obtaining a copy
 # of this software and associated documentation files (the "Software"), to deal
 # in the Software without restriction, including without limitation the rights
 # to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 # copies of the Software, and to permit persons to whom the Software is
 # furnished to do so, subject to the following conditions:
 #
 # The above copyright notice and this permission notice shall be included in all
 # copies or substantial portions of the Software.
 #
 # THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 # IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 # FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 # AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 # LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 # OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 # SOFTWARE.
 # -------------------------------------------------------------------------
 # @copyright Copyright (C) 2024 Teclib' and contributors.
 # @license   MIT https://opensource.org/licenses/mit-license.php
 # @link      https://github.com/pluginsGLPI/carbon
 # -------------------------------------------------------------------------
 #}

<div id="carbonEmissionPerModelChart" class="card-body card-max-height">
  <div class="subheader">{{ __('Biggest monthly averaged carbon emission per model', 'carbon') }}</div>
  <div class="h1 mb-3" id="carbonEmissionPerModel"></div>
  <div class="chart-lg"></div>
</div>


{% block scripts %}
<script>
	$(document).ready(function () {
      var carbonColorPalette = ['#146151', '#FEEC5C', '#BBDA50', '#F78343', '#97989C' ];

      var carbonEmissionPerTypeOptions = {
         series: [],
         labels: [],
         noData: {
            text: i18n.textdomain('carbon').__('Loading...', 'carbon'),
            align: 'center',
            verticalAlign: 'middle',
            offsetX: 0,
            offsetY: 0,
            style: {
               // color: undefined,
               fontSize: '14px',
               // fontFamily: undefined
            }
         },
         colors: carbonColorPalette,
         chart: {
            type: 'donut',
         },
         plotOptions: {
            pie: {
               startAngle: -90,
               endAngle: 90,
               offsetY: 10
            }
         },
         grid: {
            padding: {
               bottom: -80
            }
         },
         responsive: [{
            breakpoint: 480,
            options: {
               chart: {
                  width: 200
               },
               legend: {
                  position: 'bottom'
               }
            }
         }]
      };

      var carbonEmissionPerModelChart = new ApexCharts(document.querySelector("#carbonEmissionPerModelChart .chart-lg"), carbonEmissionPerTypeOptions);
      carbonEmissionPerModelChart.render();

      // Carbon emission per type
      fetch(CFG_GLPI['root_doc'] + "/" + GLPI_PLUGINS_PATH.carbon + "/ajax/Dashboard/totalCarbonEmissionPerModel.php").then(response => {
         return response.json();
      }).then(data => {
         data.chart.events = {
            legendClick: function(chartContext, seriesIndex, opts) {
               window.location.href = data.url[seriesIndex];
            }
         };
         document.querySelector("#carbonEmissionPerModelChart .subheader").innerText += ' (' + data.unit + ')';
         carbonEmissionPerModelChart.updateOptions(data, true, true);
      });
   });
</script>
{% endblock %}