<div class="page">

<!-- Header with background image -->
  <header class="page-header header-height illustration container-fluid">

    <div class="container-fluid">
        <h1 class="page-title title-color title-position">{{ __('GLPI Carbon', 'carbon') }}</h1>
    </div>
  </header>


{% block body %}
	<div class="page-body">
		<div class="container-fluid">
			<div class="row row-cards">

        <!-- Row for score cards & information block -->
				<div class="col-sm-6 col-lg-3">
					<div class="card ">
						<div class="card-body carbon-emission-card">
              <span><img class="carbon-emission pb-2" src="../dist/images/carbon_emission_icon_darkgreen.png" /></span>
							<div class="subheader">{{ __('Total Carbon Emission', 'carbon') }}</div>
							<div class="h1 mb-3" id="carbonEmission"></div>
						</div>
					</div>
				</div>

        <div class="col-sm-6 col-lg-3">
					<div class="card">
						<div class="card-body monthly-emission-card">
							<div class="subheader text-white">{{ __('Monthly carbon emission', 'carbon') }}</div>
              <div class="subheader text-white">{{ __('April, 2024', 'carbon') }}</div>
							<div class="h1 my-3 text-white text-center" id="powerConsumption"></div>
                  <p class="m-0 percent-color">{{ __(' - 10%', 'carbon') }}</p>
                  <div class="subheader text-white">{{ __('Compared to last month', 'carbon') }}</div>
						</div>
					</div>
				</div>

        <div class="col-sm-6 col-lg-6">
          <div class="card">
            <div class="card-header">
              <div class="row align-items-center">
                <div class="col-auto fw-bold">
                  <span><svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-info-circle"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><circle cx="12" cy="12" r="9" /><line x1="12" y1="8" x2="12.01" y2="8" /><polyline points="11 12 12 12 12 16 13 16" /></svg></span>
                </div>
                <div class="col">
                  <h3 class="card-title">{{ __('Information', 'carbon') }}</h3>
                </div>
              </div>
            </div>
            <div class="card-body">
              <div class="row align-items-center">
                <div class="col-auto">
                  <span><img src="../dist/images/ecology_icon_orange.png" /></span>
                </div>
                <div class="col">
                  <p class="m-0">{{ __('Our data is sourced from reliable sources and is meticulously calculated using industry-standard methodologies. We utilize accurate measurement tools and algorithms to ensure the precision and reliability of our environmental metrics.','carbon') }}
                  </p>
                </div>
                <p class="m-0">{{ __('As we move towards a greener future, businesses will soon be required to report energy usage and carbon emissions. By 2025, many areas will enforce these regulations. Adopting these practices now ensures compliance and helps combat climate change.','carbon') }}
                  </p>
              </div>
            </div>
          </div>
        </div>

        <!-- Row for score cards -->

        <div class="col-12">
            <div class="row row-cards">
                <div class="col-sm-6 col-lg-6">
                    <div class="card">
                        <div class="card-body">
                            <div class="subheader">{{ __('Carbon Emission per Type (g CO²)', 'carbon') }}</div>
                            <div class="h1 mb-3" id="carbonEmissionPerModel"></div>
                            <div id="carbonEmissionPerModelChart" class="chart-lg"></div>
                        </div>
                    </div>
                </div>

                <div class="col-sm-6 col-lg-6">
                    <div class="card">
                        <div class="card-body">
                            <div class="subheader">{{ __('Power Consumption per Type (W)', 'carbon') }}</div>
                            <div class="h1 mb-3" id="powerConsumptionPerModel"></div>
                            <div id="powerConsumptionPerModelChart" class="chart-lg"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!--Row for pie charts -->

        <div class="col-12">
            <div class="row row-cards">
            <div class="col-sm-6 col-lg-12">
                <div class="card">
                    <div class="card-body">
                        <div class="subheader">{{ __('Carbon Emission per Month (g CO²)', 'carbon') }}</div>
                        <div class="h1 mb-3" id="carbonEmissionPerMonth"></div>
                        <div id="carbonEmissionPerMonthChart" class="chart-lg"></div>
                    </div>
                </div>
            </div>
        </div>

			</div>
		</div>
	</div>
</div>
{% endblock %}

{% block footer %}
{% endblock %}

{% block scripts %}
	<script>
	document.addEventListener('DOMContentLoaded', function () {

        var carbonColorPalette = ['#FEEC5C', '#F78343', '#D1E883', '#BBDA50', '#146151' ];
        var powerColorPalette  = ['#EAB640', '#EB9C43', '#D1330B', '#AD5B34', '#B33C2F' ];

        // Define options for each chart
        var carbonEmissionPerTypeOptions = {
          series: [0.6543, 0.4255, 1.0041, 1.6217, 0.8615],
          labels: ['Desktops', 'Tablets', 'Mobiles', 'Laptops', 'Others'],
          chart: {
            type: 'donut',
            width: '80%',
          },
          colors: carbonColorPalette,
          responsive: [{
            breakpoint: 480,
            options: {
              chart: {
                width: 300
              },
            legend: {
              position: 'bottom'
            }
          }
        }]
        };

        var carbonEmissionPerMonthOptions = {
          series: [{
            name: 'Desktops',
            data: [0.55,0.26,0.67,0.91,0.45,0.77,0.91,0.45,0.77,0.91,0.45,0.77]
          }, {
            name: 'Tablets',
            data: [0.45,0.74,0.33,0.09,0.55,0.23,0.09,0.55,0.23,0.09,0.55,0.23]
          }, {
            name: 'Mobiles',
            data: [0.67,0.33,0.45,0.77,0.91,0.45,0.77,0.91,0.45,0.77,0.91,0.45]
          }, {
            name: 'Laptops',
            data: [0.91,0.45,0.77,0.91,0.45,0.77,0.91,0.45,0.77,0.91,0.45,0.77]
          },
          {
            name: 'Others',
            data: [0.45,0.77,0.91,0.45,0.77,0.91,0.45,0.77,0.91,0.45,0.77,0.91]
          }],
          chart: {
            type: 'bar',
            height: 350,
            stacked: true,
            toolbar: {
              show: true
            },
            zoom: {
              enabled: true
            }
          },
          colors: carbonColorPalette,
          responsive: [{
            breakpoint: 480,
              options: {
                legend: {
                  position: 'bottom',
                  offsetX: -10,
                  offsetY: 0
                }
              }
          }],
          plotOptions: {
            bar: {
              horizontal: false,
              borderRadius: 10,
              borderRadiusApplication: 'end', // 'around', 'end'
              borderRadiusWhenStacked: 'last', // 'all', 'last'
              dataLabels: {
                total: {
                  enabled: true,
                  formatter: function (val) {
                    return val.toFixed(2);
                  },
                  style: {
                    fontSize: '13px',
                    fontWeight: 900
                  }
                }
              }
            },
          },
          xaxis: {
            type: 'datetime',
            categories: ['01/01/2024', '01/02/2024', '01/03/2024', '01/04/2024', '01/05/2024', '01/06/2024', '01/07/2024', '01/08/2024', '01/09/2024', '01/10/2024', '01/11/2024', '01/12/2024'],
          },
          legend: {
            position: 'right',
            offsetY: 40
          },
          fill: {
            opacity: 1
          }
        };

        var powerConsumptionPerTypeOptions = {
          series: [1200, 1100, 960, 785, 805],
          labels: ['Desktops', 'Tablets', 'Mobiles', 'Laptops', 'Others'],
          chart: {
            type: 'donut',
            width: '80%',
          },
          colors: powerColorPalette,
          responsive: [{
            breakpoint: 480,
            options: {
              chart: {
              width: 300
              },
              legend: {
                position: 'bottom'
              }
            }
          }]
        };

        // Initialize charts
        var carbonEmissionPerTypeChart = new ApexCharts(document.querySelector("#carbonEmissionPerModelChart"), carbonEmissionPerTypeOptions);
        var carbonEmissionPerMonthChart = new ApexCharts(document.querySelector("#carbonEmissionPerMonthChart"), carbonEmissionPerMonthOptions);
        var carbonConsumptionPerTypeChart = new ApexCharts(document.querySelector("#powerConsumptionPerModelChart"), powerConsumptionPerTypeOptions);
        // Render charts
        carbonEmissionPerTypeChart.render();
        carbonEmissionPerMonthChart.render();
        carbonConsumptionPerTypeChart.render();

        // Fetch data with Ajax
        fetch(CFG_GLPI['root_doc'] + "/" + GLPI_PLUGINS_PATH.carbon + "/ajax/totalCarbonEmission.php").then(response => {
            console.log(response);
            return response.json();
        }).then(data => {
            let totalCarbonEmission = data;
            document.getElementById('carbonEmission').textContent = totalCarbonEmission;
        });

        fetch(CFG_GLPI['root_doc'] + "/" + GLPI_PLUGINS_PATH.carbon + "/ajax/totalPowerConsumption.php").then(response => {
            console.log(response);
            return response.json();
        }).then(data => {
            let totalPowerConsumption = data;
            document.getElementById('powerConsumption').textContent = totalPowerConsumption;
        });

        fetch(CFG_GLPI['root_doc'] + "/" + GLPI_PLUGINS_PATH.carbon + "/ajax/totalCarbonEmissionPerModel.php").then(response => {
            console.log(response);
            return response.json();
        }).then(data => {
            let carbonEmissionPerModel = data;
            console.log(carbonEmissionPerModel);
        });

        fetch(CFG_GLPI['root_doc'] + "/" + GLPI_PLUGINS_PATH.carbon + "/ajax/carbonEmissionPerMonth.php").then(response => {
            console.log(response);
            return response.json();
        }).then(data => {
            let carbonEmissionPerMonth = data;
            console.log(carbonEmissionPerMonth);
        });
    });
</script>
{% endblock %}

{% block styles %}
{% endblock %}


